FROM ubuntu:20.04 AS cuda-base
ARG DEBIAN_FRONTEND="noninteractive"

ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

RUN ln -fs /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
RUN apt-get update && apt-get install -y \
    apt-transport-https software-properties-common wget
RUN apt-get update && apt-get upgrade -y

##### 

FROM cuda-base AS cuda-2004
ARG OS=ubuntu2004
ARG ARCH=x86_64
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/${OS}/${ARCH}/cuda-keyring_1.0-1_all.deb
RUN dpkg -i cuda-keyring_1.0-1_all.deb
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/${OS}/${ARCH}/cuda-${OS}-keyring.gpg 
RUN mv cuda-${OS}-keyring.gpg /usr/share/keyrings/cuda-archive-keyring.gpg
RUN echo "deb [signed-by=/usr/share/keyrings/cuda-archive-keyring.gpg] https://developer.download.nvidia.com/compute/cuda/repos/${OS}/${ARCH}/ /" | tee /etc/apt/sources.list.d/cuda-${OS}-${ARCH}.list
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/${OS}/${ARCH}/cuda-${OS}.pin
RUN mv cuda-${OS}.pin /etc/apt/preferences.d/cuda-repository-pin-600

#ARG OS=ubuntu2004
#RUN wget https://developer.download.nvidia.com/compute/cuda/repos/${OS}/x86_64/cuda-${OS}.pin 
#RUN mv cuda-${OS}.pin /etc/apt/preferences.d/cuda-repository-pin-600
#RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/${OS}/x86_64/7fa2af80.pub
#RUN add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/${OS}/x86_64/ /"
#RUN wget https://developer.download.nvidia.com/compute/machine-learning/repos/${OS}/x86_64/nvidia-machine-learning-repo-${OS}_1.0.0-1_amd64.deb
#RUN apt-get install -y ./nvidia-machine-learning-repo-${OS}_1.0.0-1_amd64.deb

##### cuda, pinned to cuda-drivers=495.29.05-1  because that's what's on bubbly

#FROM cuda-2004 AS cuda
#ARG DEBIAN_FRONTEND="noninteractive"
#RUN apt-get update && apt-get install --no-install-recommends -y \
#    cuda-drivers=495.29.05-1 && \
#    cuda libcudnn8 libcudnn8-dev

FROM cuda-2004 AS cuda-11-5
ARG DEBIAN_FRONTEND="noninteractive"
RUN apt-get update && apt-get install --no-install-recommends -y \
    cuda-drivers=495.29.05-1 && \
    apt-get install --no-install-recommends -y \
    cuda-11-5 libcudnn8 libcudnn8-dev

FROM cuda-2004 AS cuda-11-2
ARG DEBIAN_FRONTEND="noninteractive"
RUN apt-get update && apt-get install --no-install-recommends -y \
    cuda-drivers=495.29.05-1 && \
    apt-get install --no-install-recommends -y \
    cuda-11-2 libcudnn8 libcudnn8-dev

FROM cuda-base AS cuda-11-0-cudnn-8-0
ARG DEBIAN_FRONTEND="noninteractive"
RUN apt-get update && apt-get install --no-install-recommends -y \
        cuda-drivers=520.61.05-1 && \
    apt-get install --no-install-recommends -y \
        cuda-11-0=11.0.3-1 \
        libcudnn8=8.0.5.39-1+cuda11.0 libcudnn8-dev=8.0.5.39-1+cuda11.0

#FR OM cuda-base AS cuda-10-1
#ARG DEBIAN_FRONTEND="noninteractive"
#RUN apt-get install --no-install-recommends -y \
#    cuda-drivers=495.29.05-1 && \
#    apt-get install --no-install-recommends -y \
#    cuda-10-1 libcudnn8 libcudnn8-dev

##### cuda-py

FROM cuda-11-5 AS cuda-11-5-py-3-9
ARG DEBIAN_FRONTEND="noninteractive"
RUN apt-get update && apt-get install --no-install-recommends -y \
    python3.9 python3-pip 

FROM cuda-11-2 AS cuda-11-2-py-3-8
ARG DEBIAN_FRONTEND="noninteractive"
RUN apt-get update && apt-get install --no-install-recommends -y \
    python3.8 python3-pip 

FROM cuda-11-0-cudnn-8-0 AS cuda-11-0-cudnn-8-0-py-3-8
ARG DEBIAN_FRONTEND="noninteractive"
RUN apt-get update && apt-get install --no-install-recommends -y \
    python3.8 python3-pip 

#FROM cuda-11-2 AS cuda-11-2-py-3-9
#ARG DEBIAN_FRONTEND="noninteractive"
#RUN apt-get update && apt-get install --no-install-recommends -y \
#    python3.9 python3-pip 

#FROM cuda-11-0 AS cuda-11-0-py-3-9
#ARG DEBIAN_FRONTEND="noninteractive"
#RUN apt-get update && apt-get install --no-install-recommends -y \
#    python3.9 python3-pip 

##### cuda-py-tf

#FROM cuda-py AS cuda-py-tf
#ARG DEBIAN_FRONTEND="noninteractive"
#RUN python3 -m pip install tensorflow

FROM cuda-11-5-py-3-9 AS cuda-11-5-py-3-9-tf-2-7-0
ARG DEBIAN_FRONTEND="noninteractive"
RUN python3 -m pip install tensorflow==2.7.0

FROM cuda-11-2-py-3-8 AS cuda-11-2-py-3-8-tf-2-5-2
ARG DEBIAN_FRONTEND="noninteractive"
RUN python3 -m pip install tensorflow==2.5.2 \
    grpcio~=1.34.0 h5py~=3.1.0 numpy~=1.19.2


FROM cuda-11-0-cudnn-8-0-py-3-8 AS cuda-11-0-cudnn-8-0-py-3-8-tf-2-2-0
ARG DEBIAN_FRONTEND="noninteractive"
RUN python3 -m pip install tensorflow==2.2.0 \
    grpcio~=1.34.0 h5py~=3.1.0 numpy~=1.19.2

#FROM cuda-11-2-py-3-9 AS cuda-11-2-py-3-9-tf-2-6-2
#ARG DEBIAN_FRONTEND="noninteractive"
#RUN python3 -m pip install tensorflow==2.6.2

#FROM cuda-11-2-py-3-9 AS cuda-11-2-py-3-9-tf-2-5-2
#ARG DEBIAN_FRONTEND="noninteractive"
#RUN python3 -m pip install tensorflow==2.5.2 \
#    grpcio~=1.34.0 h5py~=3.1.0 numpy~=1.19.2

#FROM cuda-11-0-py-3-9 AS cuda-11-0-py-3-9-tf-2-4-4
#ARG DEBIAN_FRONTEND="noninteractive"
#RUN python3 -m pip install tensorflow==2.4.4


#FR OM cuda-11-0 AS cuda-11-0-py-3-9
#ARG DEBIAN_FRONTEND="noninteractive"
#RUN apt-get install --no-install-recommends -y \
#    python3.9 python3-pip 
##
#FR OM cuda-11-0-py-3-9 AS cuda-11-0-py-3-9-tf-2-4-4
#ARG DEBIAN_FRONTEND="noninteractive"
#RUN python3 -m pip install tensorflow==2.4.4


#    python3 -m pip install -U pip wheel
#    #python3 -m pip install numpy==1.19.4 six==1.15.0
#    #python3 -m pip install -U keras_preprocessing --no-deps
    
#    python3 -c "import tensorflow as tf; print(tf.__version__)"

